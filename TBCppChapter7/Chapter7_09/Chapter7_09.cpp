#include <iostream>

using namespace std;

int func()
{
    return 5;
}

int goo()
{
    return 10;
}

int main()
{
    // 함수를 괄호() 를 붙여 실행하는 게 아니라, 그냥 함수 이름 자체를 출력 > 주소값이 출력됨
    // 아, 함수도 결국에는 포인터 변수구나! 함수도 메모리에 들어오는 거구나!
    cout << func << endl;

    // 이렇게 함수가 호출되면, 이 함수에 저장된 주소값으로 함수가 저장된 메모리 공간을 찾아감.
    // 그리고 그 메모리 공간에 저장된 프로그램을 가져다가 실행시킴.
    // 또, 함수가 종료되고 나서 나중에 어디로 돌아와야 할 지도 가지고 있게 됨. > 스택과 힙에서 더 자세히 설명
    func();

    // 함수 포인터 변수 선언 및 다른 함수의 주소값을 할당하여 초기화
    // 참고로, fcnptr 은 해당 함수 포인터 변수에 대한 임의의 이름이며, 원하는 대로 지을 수 있음.
    int (*fcnptr)() = func;

    cout << fcnptr() << endl; // 5 > func 함수의 주소값이 할당되어 해당 함수 실행

    // 함수 포인터 변수의 주소값을 다른 함수의 주소값으로 바꿔치기할 수 도 있음.
    fcnptr = goo;

    cout << fcnptr() << endl; // 10 > goo 함수의 주소값이 할당되어 해당 함수 실행

    return 0;
}